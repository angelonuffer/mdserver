#! /usr/bin/env python

from BaseHTTPServer import HTTPServer, BaseHTTPRequestHandler
from argparse import ArgumentParser
import os

from markdown import markdown

BASE_HTML = """
<html>
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <script type="text/javascript" src="http://code.jquery.com/jquery-2.1.4.js">
        </script>
        <script type="text/javascript" src="http://code.jquery.com/mobile/git/jquery.mobile-git.js">
        </script>
        <link rel="stylesheet" type="text/css" href="http://code.jquery.com/mobile/git/jquery.mobile-git.css" />
    </head>
    <body>
        <div class="ui-content">
            |content|
        </div>
    </body>
</html>
"""


class MDRequestHandler(BaseHTTPRequestHandler):

    def do_GET(self):
        complete_path = os.path.join(MDRequestHandler.directory, self.path.strip("/"))
        content = str()
        if self.path == "/":
            self.send_response(200)
            self.send_header("Content-Type", "text/html; charset=utf-8")
            self.end_headers()
            content += "<ul data-role=\"listview\" data-filter=\"true\" data-filter-placeholder=\"Buscar documentos...\">"
            for document_path in all_markdown_documents("."):
                content += "<li><a href=\"%s\">%s</a>" % (document_path.strip("./"), document_path)
            content += "</ul>"
        if os.path.isfile(complete_path):
            self.send_response(200)
            self.send_header("Content-Type", "text/html; charset=utf-8")
            self.end_headers()
            content = markdown(open(complete_path).read())
        page = BASE_HTML.replace("|content|", content)
        self.wfile.write(page)


def all_markdown_documents(path):
    documents = list()
    for child in os.listdir(os.path.join(MDRequestHandler.directory, path)):
        if os.path.isdir(os.path.join(MDRequestHandler.directory, path, child)):
            documents.extend(all_markdown_documents(os.path.join(path, child)))
        if os.path.splitext(os.path.join(path, child))[1] == ".md":
            documents.append(os.path.join(path, child))
    return documents

def run():
    arguments_parser = ArgumentParser(description="Serve markdown files.")
    arguments_parser.add_argument("-d", "--dir", default=".", help="directory containing markdown files")
    arguments_parser.add_argument("-p", "--port", type=int, default=8000, help="directory containing markdown files")
    arguments = arguments_parser.parse_args()
    MDRequestHandler.directory = vars(arguments)["dir"]
    port = vars(arguments)["port"]
    httpd = HTTPServer(("", port), MDRequestHandler)
    httpd.serve_forever()

run()
